{"version":3,"sources":["../external \"PropTypes\"","../external \"React\"","../external \"ObjectAssign\"","Toggle.tsx","Tabs.tsx","Indicator.tsx","Remote.tsx","Client.ts","Drawer.tsx","Chart.tsx","TimersReducer.ts","Timers.tsx","App.tsx","index.tsx","../external \"reactLifecyclesCompat\"","../external \"ReactDOM\""],"names":["module","exports","PropTypes","React","ObjectAssign","Toggle","children","className","Button","id","value","onChange","checked","type","e","target","htmlFor","Tab","Tabs","useState","selected","setSelected","SelectedTab","map","c","index","key","props","label","Indicator","unit","Remote","onPowerChange","onModeChange","onFanSpeedChange","onTemperatureChange","state","power","mode","fan_speed","temperature","minTemp","current_temperature","setTemperatureState","min","max","onAfterChange","trackStyle","backgroundColor","height","railStyle","handleStyle","border","width","marginLeft","marginTop","Client","url_base","method","headers","endpoint","json","url","this","options","body","JSON","stringify","fetch","_fetch","_post","speed","result","length","timer","tid","_delete","_put","START_STATE","Drawer","isOpen","setOpen","onClick","Chart","full_history","history","d3Container","useRef","timeSpan","setTimeSpan","useEffect","cutoff","Date","getTime","filter","h","timestamp","sort","h1","h2","Math","t","maxTemp","minHumidity","humidity","maxHumidity","minDate","maxDate","margin","select","current","remove","svg","attr","append","humidityScale","scaleLinear","domain","range","temperatureScale","timeScale","scaleTime","style","call","axisBottom","selectAll","axisLeft","ticks","axisRight","path1","line","x","y","datum","path2","text","ref","reducer","action","timers","payload","INITIAL_SATE","ModeIcon","FanIcon","fan","Command","command","on_off","timerDefault","enabled","time","TimerEdit","onSave","onCancel","onDelete","setTimer","parts","split","Number","splitTime","hour","setTime","setTimerCommand","cmd","newTimer","placeholder","newTime","join","pwr","Timers","client","dispatch","view","editState","setEditState","add_timer","then","addTimer","set_timer","updateTimer","remove_timer","removeTimer","App","remoteState","setRemoteState","loading","setLoading","setCurrent","setHistory","useThunkReducer","a","get_history","remote","sensor","condition","on","off","ReactDOM","render","document","getElementById","reactLifecyclesCompat"],"mappings":"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","file":"static/js/main.2e62ed4b.chunk.js","sourcesContent":["module.exports = PropTypes;","module.exports = React;","module.exports = ObjectAssign;","import * as React from \"react\";\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\nimport \"./Toggle.css\";\r\n\r\nexport default function Toggle({\r\n  children,\r\n  className\r\n}: InferProps<typeof Toggle.propTypes>) {\r\n  return <div className={`Toggle ${className || ''}`}>{children}</div>;\r\n}\r\n\r\nToggle.propTypes = {\r\n  children: PropTypes.any,\r\n  className: PropTypes.string\r\n};\r\n\r\nfunction Option({\r\n  id,\r\n  value,\r\n  children,\r\n  onChange,\r\n  checked\r\n}: InferProps<typeof Option.propTypes>) {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"radio\"\r\n        value={value}\r\n        checked={checked || false}\r\n        onChange={e => {\r\n          if (e.target.checked) {\r\n            onChange(value);\r\n          }\r\n        }}\r\n        id={id}\r\n        className=\"Toggle-Option-Radio\"\r\n      />\r\n      <label htmlFor={id} className=\"Toggle-Option\">\r\n        {children}\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  children: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n  checked: PropTypes.bool\r\n};\r\n\r\nToggle.Button = Option;\r\n","import React, { ReactNode, useState } from 'react';\r\nimport './Tabs.css';\r\nimport Toggle from './Toggle';\r\n\r\nconst Tab: React.FC<{ label: ReactNode, children: ReactNode }> = ({ children }) => {\r\n    return <div className=\"Tabs-Panel\">{children}</div>\r\n}\r\n\r\nconst Tabs: React.FC<{ children: Array<any>, className?: string}> & { Tab: any } = ({ children, className }) => {\r\n    const [selected, setSelected] = useState(0);\r\n    const SelectedTab = children[selected];\r\n\r\n    if (!children) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={\"Tabs \" + (className || '')}>\r\n            <div className=\"Tabs-Navigation\">\r\n                <Toggle>\r\n                    {children.map((c: any, index: number) =>\r\n                        <Toggle.Button\r\n                            id={'' + index}\r\n                            key={index}\r\n                            value={index}\r\n                            onChange={setSelected}\r\n                            checked={selected === index}\r\n                        >\r\n                            {c.props.label}\r\n                        </Toggle.Button>\r\n                    )}\r\n                </Toggle>\r\n            </div>\r\n            <Tab {...SelectedTab.props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs;\r\nTabs.Tab = Tab;\r\n","import React from \"react\";\r\nimport \"./Indicator.css\";\r\n\r\nconst Indicator: React.FC<{\r\n  label: string;\r\n  value: any;\r\n  unit: string;\r\n}> = ({ label, value, unit }) => {\r\n  return (\r\n    <div className=\"Indicator\">\r\n      <span className=\"Label\">{label}</span>\r\n      <span className=\"Value\">\r\n        <span>{value}</span>\r\n        <span className=\"Unit\">{unit}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Indicator;\r\n","import React, { useState } from 'react';\nimport './Remote.css';\nimport Toggle from './Toggle';\nimport { RemoteMode, RemoteFanSpeed, RemoteState } from './Client';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nexport const ACTION_PWR = 'power';\nexport const ACTION_MODE = 'mode';\n\nconst Remote: React.FC<{\n    onPowerChange: (power: boolean) => void;\n    onModeChange: (mode: RemoteMode) => void;\n    onFanSpeedChange: (fan_speed: RemoteFanSpeed) => void;\n    onTemperatureChange: (temperature: number) => void;\n    state: RemoteState;\n}> = ({\n    onPowerChange,\n    onModeChange,\n    onFanSpeedChange,\n    onTemperatureChange,\n    state,\n}) => {\n    const { power, mode, fan_speed, temperature } = state;\n    const minTemp = mode === 'heater' ? 20 : 22;\n    const maxTemp = 30;\n    const [current_temperature, setTemperatureState] = useState(temperature);\n\n    return (\n        <>\n            <Toggle className=\"Option-row\">\n                <Toggle.Button\n                    id=\"pwr-on\"\n                    value={true}\n                    checked={power}\n                    onChange={onPowerChange}\n                >\n                    On\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"pwr-off\"\n                    value={false}\n                    checked={!power}\n                    onChange={onPowerChange}\n                >\n                    Off\n                </Toggle.Button>\n            </Toggle>\n\n            <Toggle className=\"Option-row\">\n                <Toggle.Button\n                    id=\"mode-auto\"\n                    value={'auto'}\n                    checked={mode === 'auto'}\n                    onChange={onModeChange}\n                >\n                    Auto\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"mode-cooler\"\n                    value={'cooler'}\n                    checked={mode === 'cooler'}\n                    onChange={onModeChange}\n                >\n                    <i className=\"far fa-snowflake\"></i>\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"mode-heater\"\n                    value={'heater'}\n                    checked={mode === 'heater'}\n                    onChange={onModeChange}\n                >\n                    <i className=\"fas fa-sun\"></i>\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"mode-dry\"\n                    value={'dry'}\n                    checked={mode === 'dry'}\n                    onChange={onModeChange}\n                >\n                    Dry\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"mode-fan\"\n                    value={'fan'}\n                    checked={mode === 'fan'}\n                    onChange={onModeChange}\n                >\n                    <i className=\"fas fa-fan small\"></i>\n                </Toggle.Button>\n            </Toggle>\n\n            <Toggle className=\"Option-row\">\n                <Toggle.Button\n                    id=\"speed-auto\"\n                    value={'auto'}\n                    checked={fan_speed === 'auto'}\n                    onChange={onFanSpeedChange}\n                >\n                    Auto\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"speed-high\"\n                    value={'high'}\n                    checked={fan_speed === 'high'}\n                    onChange={onFanSpeedChange}\n                >\n                    <i className=\"fas fa-fan\"></i>\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"speed-low\"\n                    value={'low'}\n                    checked={fan_speed === 'low'}\n                    onChange={onFanSpeedChange}\n                >\n                    <i className=\"fas fa-fan small\"></i>\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"speed-quiet\"\n                    value={'quiet'}\n                    checked={fan_speed === 'quiet'}\n                    onChange={onFanSpeedChange}\n                >\n                    <i className=\"fas fa-volume-mute\"></i>\n                </Toggle.Button>\n                <Toggle.Button\n                    id=\"speed-natural\"\n                    value={'natural'}\n                    checked={fan_speed === 'natural'}\n                    onChange={onFanSpeedChange}\n                >\n                    <i className=\"fas fa-tree\"></i>\n                </Toggle.Button>\n            </Toggle>\n\n            <div className=\"Option-row Option-row_slider\">\n                <Slider\n                    min={minTemp}\n                    max={maxTemp}\n                    value={current_temperature}\n                    onChange={setTemperatureState}\n                    onAfterChange={onTemperatureChange}\n                    trackStyle={{ backgroundColor: 'transparent', height: 6 }}\n                    railStyle={{\n                        backgroundColor: '#106d82',\n                        height: 6,\n                    }}\n                    handleStyle={{\n                        border: '1px solid #106d82',\n                        height: 20,\n                        width: 20,\n                        marginLeft: 0,\n                        marginTop: -7,\n                        backgroundColor: 'white',\n                    }}\n                />\n                <div className=\"Target-temperature\">\n                    {current_temperature}°C\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Remote;\n","export default class Client {\r\n    url_base = '/api/';\r\n\r\n    _fetch(method: 'POST' | 'PUT' | 'DELETE' | 'GET', headers: Object, endpoint: string, json?: any) {\r\n        let url = this.url_base + endpoint;\r\n        let options: any = {\r\n            method,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                ...headers,\r\n            },\r\n        };\r\n\r\n        if (json) {\r\n            options.body = JSON.stringify(json);\r\n        }\r\n\r\n        return fetch(url, options);\r\n    }\r\n\r\n    _delete(endpoint: string) {\r\n        return this._fetch('DELETE', {}, endpoint);\r\n    }\r\n\r\n    _put(endpoint: string, json?: any) {\r\n        return this._fetch('PUT', { 'Content-Type': 'application/json;charset=UTF-8' }, endpoint, json);\r\n    }\r\n\r\n    _post(endpoint: string, json?: any) {\r\n        return this._fetch('POST', { 'Content-Type': 'application/json;charset=UTF-8' }, endpoint, json);\r\n    }\r\n\r\n    off() {\r\n        this._post('off');\r\n    }\r\n\r\n    on() {\r\n        this._post('on');\r\n    }\r\n\r\n    mode(mode: RemoteMode) {\r\n        this._post('mode', { mode });\r\n    }\r\n\r\n    fan(speed: RemoteFanSpeed) {\r\n        this._post('fan', { speed });\r\n    }\r\n\r\n    temperature(temperature: number) {\r\n        this._post('temperature', { temperature });\r\n    }\r\n\r\n    async history() {\r\n        const result = await fetch(this.url_base + 'sensor');\r\n        return (await result.json()) as History;\r\n    }\r\n\r\n    async sensor() {\r\n        const result = await fetch(this.url_base + 'sensor');\r\n        const json = await result.json();\r\n        if (json.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return json[0] as CurrentCondition;\r\n    }\r\n\r\n    async state() {\r\n        const result = await fetch(this.url_base + 'state');\r\n        return (await result.json()) as RemoteState;\r\n    }\r\n\r\n    async timers() {\r\n        const result = await fetch(this.url_base + 'timers');\r\n        return (await result.json()) as [TimerAndTid];\r\n    }\r\n\r\n    async add_timer(timer: Timer) {\r\n        const result = await this._post('timers', timer);\r\n        return (await result.json()) as TimerAndTid;\r\n    }\r\n\r\n    remove_timer(tid: number) {\r\n        return this._delete('timers/' + tid);\r\n    }\r\n\r\n    set_timer(tid: number, timer: Timer) {\r\n        return this._put('timers/' + tid, timer);\r\n    }\r\n}\r\n\r\nexport type RemoteMode = 'auto' | 'heater' | 'cooler' | 'dry' | 'fan';\r\nexport type RemoteFanSpeed = 'auto' | 'high' | 'low' | 'quiet' | 'natural';\r\n\r\nexport type RemoteState = {\r\n    mode: RemoteMode;\r\n    power: boolean;\r\n    fan_speed: RemoteFanSpeed;\r\n    temperature: number;\r\n};\r\n\r\nexport const START_STATE: RemoteState = {\r\n    mode: 'auto',\r\n    power: false,\r\n    fan_speed: 'auto',\r\n    temperature: 25,\r\n};\r\n\r\nexport type Condition = {\r\n    temperature: number;\r\n    humidity: number;\r\n    timestamp: number;\r\n};\r\n\r\nexport type CurrentCondition = {\r\n    temperature: number;\r\n    humidity: number;\r\n};\r\n\r\nexport type History = Condition[];\r\n\r\nexport type Modes = 'auto' | 'heater' | 'cooler' | 'dry' | 'fan';\r\nexport type FanSpeeds =  'auto' | 'high' | 'low' | 'quiet' | 'natural';\r\n\r\nexport type TimerCommand = {\r\n    on_off: 'on' | 'off',\r\n    temperature: number,\r\n    mode: Modes,\r\n    fan: FanSpeeds,\r\n};\r\n\r\nexport type Timer = {\r\n    time: string,\r\n    enabled: boolean,\r\n    command: TimerCommand,\r\n};\r\n\r\nexport type TimerAndTid = Timer & { tid: number }\r\n","import React, { useState, ReactNode } from 'react';\r\nimport './Drawer.css';\r\n\r\nconst Drawer: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Drawer\">\r\n            <div className={'Drawer-Content ' + (isOpen ? 'Open' : '')}>\r\n                {children}\r\n            </div>\r\n            <button className=\"Drawer-Button\" onClick={() => setOpen(!isOpen)}>\r\n                {isOpen ? (\r\n                    <i className=\"fa fa-chevron-up\" />\r\n                ) : (\r\n                    <i className=\"fa fa-chevron-down\" />\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport { History, Condition } from './Client';\nimport './Chart.css';\nimport { select } from 'd3-selection';\nimport { scaleLinear, scaleTime } from 'd3-scale';\nimport { axisBottom, axisLeft, axisRight } from 'd3-axis';\nimport { line } from 'd3-shape';\n\n\nconst Chart: React.FC<{ history: History }> = ({ history: full_history }) => {\n    const d3Container = useRef(null);\n    const [timeSpan, setTimeSpan] = useState(24 * 3600);\n\n    useEffect(() => {\n        const cutoff = new Date().getTime() / 1000 - timeSpan;\n        const history = full_history\n            .filter(h => h.timestamp >= cutoff)\n            .sort((h1, h2) => h1.timestamp - h2.timestamp);\n        const minTemp = Math.min(...history.map(t => t.temperature)) - 2;\n        const maxTemp = Math.max(...history.map(t => t.temperature)) + 2;\n        const minHumidity = Math.min(...history.map(t => t.humidity)) - 5;\n        const maxHumidity = Math.max(...history.map(t => t.humidity)) + 5;\n        const minDate = Math.min(...history.map(t => t.timestamp));\n        const maxDate = Math.max(...history.map(t => t.timestamp));\n        const margin = { top: 20, right: 100, bottom: 100, left: 100 },\n            width = 600 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n\n        select(d3Container.current)\n            .select('*')\n            .remove();\n\n        const svg = select(d3Container.current)\n            .attr(\n                'viewBox',\n                `0 0 ${width + margin.left + margin.right} ${height +\n                    margin.top +\n                    margin.bottom}`\n            )\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        const humidityScale = scaleLinear()\n            .domain([minHumidity, maxHumidity])\n            .range([height, 0]);\n\n        const temperatureScale = scaleLinear()\n            .domain([minTemp, maxTemp])\n            .range([height, 0]);\n\n        const timeScale = scaleTime()\n            .domain([new Date(minDate * 1000), new Date(maxDate * 1000)])\n            .range([0, width]);\n\n        svg.append('g')\n            .attr('transform', `translate(0,${height})`)\n            .attr('class', 'axis')\n            .style('text-anchor', 'end')\n            .call(axisBottom(timeScale))\n            .selectAll('text')\n            .attr('transform', 'translate(-10,10)rotate(-45)');\n        svg.append('g')\n            .attr('class', 'axis')\n            .call(axisLeft(temperatureScale).ticks(7));\n        svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(${width},0)`)\n            .call(axisRight(humidityScale).ticks(5));\n\n        const path1 = line<Condition>()\n            .x(h => timeScale(new Date(h.timestamp * 1000)))\n            .y(h => temperatureScale(h.temperature));\n        svg.append('path')\n            .datum(history)\n            .attr('class', 'Chart_ts-1')\n            .attr('d', path1);\n\n        const path2 = line<Condition>()\n            .x(h => timeScale(new Date(h.timestamp * 1000)))\n            .y(h => humidityScale(h.humidity));\n        svg.append('path')\n            .datum(history)\n            .attr('class', 'Chart_ts-2')\n            .attr('d', path2);\n\n        svg.append('text')\n            .attr('text-anchor', 'middle')\n            .attr('transform', 'rotate(-90)')\n            .attr('font-size', '30px')\n            .attr('y', -margin.left + 40)\n            .attr('x', -height / 2)\n            .attr('fill', 'red')\n            .text('Temperature');\n\n        svg.append('text')\n            .attr('text-anchor', 'middle')\n            .attr('transform', 'rotate(90)')\n            .attr('font-size', '30px')\n            .attr('y', -width - margin.right + 40)\n            .attr('x', height / 2)\n            .attr('fill', 'steelblue')\n            .text('Humidity');\n    }, [full_history, timeSpan]);\n\n    return (\n        <>\n            <svg className=\"Chart\" ref={d3Container} />\n            <div className=\"Chart\">\n                <button onClick={() => setTimeSpan(6 * 3600)}>6h</button>\n                <button onClick={() => setTimeSpan(24 * 3600)}>1d</button>\n                <button onClick={() => setTimeSpan(2 * 24 * 3600)}>2d</button>\n                <button onClick={() => setTimeSpan(7 * 24 * 3600)}>1w</button>\n            </div>\n        </>\n    );\n};\n\nexport default Chart;\n","import Client, {\n    Timer,\n    TimerAndTid,\n} from './Client';\n\n\ntype Action = {\n    type: 'add',\n    payload: TimerAndTid,\n} | {\n    type: 'update',\n    payload: TimerAndTid,\n} | {\n    type: 'remove',\n    payload: { tid: number },\n} | {\n    type: 'reset',\n    payload: [TimerAndTid]\n}| {\n    type: 'loading',\n}\n\ntype State = { state: 'initial' | 'loading' | 'loaded', timers: TimerAndTid[]}\n\nexport const reducer: (state: State, action: Action) => State = (state, action) => {\n    switch (action.type) {\n        case 'loading':\n            return {\n                state: 'loading',\n                timers: [],\n            };\n        case 'reset':\n            return {\n                state: 'loaded',\n                timers: action.payload,\n            };\n        case 'add':\n            return {\n                state: state.state,\n                timers: [...state.timers, action.payload]\n            }\n        case 'remove':\n            return {\n                state: state.state,\n                timers: state.timers.filter(t => t.tid !== action.payload.tid),\n            }\n        case 'update':\n            return {\n                state: state.state,\n                timers: state.timers.map(t => t.tid === action.payload.tid ? action.payload : t),\n            }\n    }\n\n    return state;\n}\n\nexport const INITIAL_SATE: State = { state: 'initial', timers: []}\n\ntype Dispatch = ((action: Action) => void);\n\nexport const add = (client: Client, timer: Timer) => {\n    return (dispatch: Dispatch) => {\n        client.add_timer(timer).then(t => dispatch({ type: 'add', payload: t}))\n    }\n}\n\nexport const fetch = (client: Client) => {\n    return (dispatch: Dispatch) => {\n        dispatch({ type: 'loading' });\n        client.timers().then(t => dispatch({ type: 'reset', payload: t}))\n    }\n}\n\nexport const remove = (client: Client, tid: number) => {\n    return (dispatch: Dispatch) => {\n        client.remove_timer(tid).then(() => dispatch({ type: 'remove', payload: { tid }}))\n    }\n}\n\nexport const update = (client: Client, timer: Timer, tid: number) => {\n    return (dispatch: Dispatch) => {\n        client.set_timer(tid, timer).then(() => dispatch({ type: 'update', payload: { ...timer, tid }}))\n    }\n}","import React, { useState } from \"react\";\nimport {\n  remove as removeTimer,\n  add as addTimer,\n  update as updateTimer\n} from \"./TimersReducer\";\nimport Client, {\n  TimerAndTid,\n  TimerCommand,\n  Timer,\n  Modes,\n  FanSpeeds\n} from \"./Client\";\nimport Remote from \"./Remote\";\nimport \"./Timers.css\";\n\nconst ModeIcon = ({ mode }: { mode: Modes }) => {\n  switch (mode) {\n    case \"heater\":\n      return <i className=\"far fa-sun\"></i>;\n    case \"cooler\":\n      return <i className=\"far fa-snowflake\"></i>;\n    case \"fan\":\n      return <i className=\"fas fa-fan small\"></i>;\n    case \"dry\":\n      return <i className=\"timer-icon\">D</i>;\n    default:\n      return <i className=\"timer-icon\">A</i>;\n  }\n};\n\nconst FanIcon = ({ fan }: { fan: FanSpeeds }) => {\n  switch (fan) {\n    case \"low\":\n      return <i className=\"fas fa-fan small\"></i>;\n    case \"high\":\n      return <i className=\"fas fa-fan\"></i>;\n    case \"quiet\":\n      return <i className=\"fas fa-volume-mute\"></i>;\n    case \"natural\":\n      return <i className=\"fas fa-tree\"></i>;\n    default:\n      return <i className=\"timer-icon\">A</i>;\n  }\n};\n\nconst Command: React.FC<{ command: TimerCommand }> = ({ command }) => {\n  if (command.on_off === \"off\") {\n    return <i className=\"fas fa-toggle-off\" />;\n  }\n\n  return (\n    <>\n      <span className=\"Temperature\">{command.temperature}℃</span>\n      <span className=\"Icon\">\n        <i className=\"fas fa-toggle-on\"></i>\n      </span>\n      <span className=\"Icon\">\n        <ModeIcon mode={command.mode} />\n      </span>\n      <span className=\"Icon\">\n        <FanIcon fan={command.fan} />\n      </span>\n    </>\n  );\n};\n\nconst timerDefault: Timer = {\n  enabled: true,\n  time: \"01:00\",\n  command: { on_off: \"off\", temperature: 22, fan: \"auto\", mode: \"auto\" }\n};\n\nfunction splitTime(time: string): [Number, Number] {\n  const parts = time.split(\":\").map(Number);\n  if (parts.length !== 2) {\n    return [8, 30];\n  }\n\n  const [hour, min] = parts;\n  return [hour, min];\n}\n\nconst TimerEdit: React.FC<{\n  value: Timer;\n  onSave: (timer: Timer) => void;\n  onCancel: () => void;\n  onDelete?: () => void;\n}> = ({ value, onSave, onCancel, onDelete }) => {\n  const [timer, setTimer] = useState<Timer>(value);\n  const [[hour, min], setTime] = useState<[Number, Number]>(\n    splitTime(value.time)\n  );\n\n  const setTimerCommand = (cmd: TimerCommand) => {\n    const newTimer: Timer = {\n      ...timer,\n      command: cmd\n    };\n    setTimer(newTimer);\n  };\n\n  return (\n    <div className=\"TimerEditor\">\n      <div className=\"TimeInput\">\n          <input\n            type=\"text\"\n            placeholder=\"06\"\n            value={'' + hour}\n            onChange={e => {\n              const newTime: [Number, Number] = [Number(e.target.value), min];\n              setTime(newTime);\n              setTimer({ ...timer, time: newTime.join(\":\") });\n            }}\n          />&nbsp;:&nbsp;\n          <input\n            type=\"text\"\n            value={'' + min}\n            placeholder=\"30\"\n            onChange={e => {\n              const newTime: [Number, Number] = [hour, Number(e.target.value)];\n              setTime(newTime);\n              setTimer({ ...timer, time: newTime.join(\":\") });\n            }}\n          />\n      </div>\n\n      <Remote\n        state={{\n          power: timer.command.on_off === \"on\",\n          fan_speed: timer.command.fan,\n          mode: timer.command.mode,\n          temperature: timer.command.temperature\n        }}\n        onPowerChange={pwr =>\n          setTimerCommand({\n            ...timer.command,\n            on_off: pwr ? \"on\" : \"off\"\n          })\n        }\n        onFanSpeedChange={fan =>\n          setTimerCommand({\n            ...timer.command,\n            fan\n          })\n        }\n        onModeChange={mode =>\n          setTimerCommand({\n            ...timer.command,\n            mode\n          })\n        }\n        onTemperatureChange={temperature =>\n          setTimerCommand({\n            ...timer.command,\n            temperature\n          })\n        }\n      />\n\n      <div className=\"Timers-Action\">\n        <button onClick={() => onSave(timer)}>Save</button>\n        {onDelete && <button onClick={() => onDelete()}>Delete</button>}\n        <button onClick={() => onCancel()}>Close</button>\n      </div>\n    </div>\n  );\n};\n\ntype TimersViewState =\n  | { view: \"list\" }\n  | { view: \"new\" }\n  | { view: \"edit\"; timer: TimerAndTid };\n\nconst Timers: React.FC<{\n  client: Client;\n  dispatch: any;\n  timers: TimerAndTid[];\n}> = ({ client, dispatch, timers }) => {\n  const [editState, setEditState] = useState<TimersViewState>({ view: \"list\" });\n\n  if (editState.view === \"new\") {\n    return (\n      <TimerEdit\n        value={timerDefault}\n        onSave={timer => {\n          dispatch(addTimer(client, timer));\n          setEditState({ view: \"list\" });\n        }}\n        onCancel={() => setEditState({ view: \"list\" })}\n      />\n    );\n  }\n\n  if (editState.view === \"edit\") {\n    return (\n      <TimerEdit\n        value={editState.timer}\n        onSave={timer => {\n          dispatch(updateTimer(client, timer, editState.timer.tid));\n          setEditState({ view: \"list\" });\n        }}\n        onCancel={() => setEditState({ view: \"list\" })}\n        onDelete={() => {\n          dispatch(removeTimer(client, editState.timer.tid));\n          setEditState({ view: \"list\" });\n        }}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"Timers-Action\">\n        <button\n          className=\"Timers-Action\"\n          onClick={() => setEditState({ view: \"new\" })}\n        >\n          Add a timer\n        </button>\n      </div>\n      <ul className=\"Timers\">\n        {timers.map(timer => (\n          <li key={timer.tid}>\n            <button\n              className=\"edit\"\n              onClick={e => {\n                setEditState({ view: \"edit\", timer: timer });\n              }}\n            >\n              <span className=\"Timers-Time\">{timer.time}</span>\n              <span className=\"Timers-Command\">\n                <Command command={timer.command} />\n              </span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Timers;\n","import React, { useState, useEffect } from 'react';\nimport useThunkReducer from 'react-hook-thunk-reducer';\nimport Tabs from './Tabs';\nimport './App.css';\nimport Indicator from './Indicator';\nimport Remote from './Remote';\nimport Client, {\n    RemoteMode,\n    START_STATE,\n    RemoteFanSpeed,\n    CurrentCondition,\n    History,\n} from './Client';\nimport Drawer from './Drawer';\nimport Chart from './Chart';\nimport { reducer, INITIAL_SATE, fetch as fetchTimers } from './TimersReducer';\nimport Timers from './Timers';\n\nconst client = new Client();\n\nconst App: React.FC = () => {\n    const [remoteState, setRemoteState] = useState(START_STATE);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState<null | CurrentCondition>(null);\n    const [history, setHistory] = useState<History>([]);\n    const [timers, dispatch] = useThunkReducer(reducer, INITIAL_SATE)\n\n    useEffect(() => {\n        async function get_history() {\n            const history = await client.history();\n            setHistory(history);\n        }\n\n        get_history();\n    }, []);\n\n    useEffect(() => {\n        dispatch(fetchTimers(client));\n    }, [dispatch])\n\n    useEffect(() => {\n        client.state().then(remote => {\n            setRemoteState(remote);\n\n            client.sensor().then(condition => {\n                setCurrent(condition);\n            });\n\n            setLoading(false);\n        });\n    }, []);\n\n    function onPowerChange(power: boolean) {\n        if (power) {\n            client.on();\n        } else {\n            client.off();\n        }\n\n        setRemoteState(state => ({\n            ...state,\n            power,\n        }));\n    }\n\n    function onModeChange(mode: RemoteMode) {\n        client.mode(mode);\n\n        setRemoteState(state => ({\n            ...state,\n            mode,\n        }));\n    }\n\n    function onSpeedChange(speed: RemoteFanSpeed) {\n        client.fan(speed);\n\n        setRemoteState(state => ({\n            ...state,\n            fan_speed: speed,\n        }));\n    }\n\n    function onTemperatureChange(temperature: number) {\n        client.temperature(temperature);\n\n        setRemoteState(state => ({\n            ...state,\n            temperature: temperature,\n        }));\n    }\n\n    if (loading) {\n        return <div>Please wait</div>;\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"Indicators\">\n                    <Indicator\n                        label=\"Temperature\"\n                        value={current ? current.temperature : 'N/A'}\n                        unit=\"°C\"\n                    />\n                    <Indicator\n                        label=\"Humidity\"\n                        value={current ? current.humidity : 'N/A'}\n                        unit=\"%\"\n                    />\n                </div>\n            </header>\n            <main className=\"App-main\">\n                <Drawer>\n                    {history.length === 0 ? (\n                        'Collecting data...'\n                    ) : (\n                            <Chart history={history} />\n                        )}\n                </Drawer>\n                <Tabs className=\"side-tabs\">\n                    <Tabs.Tab label={<><i className=\"fas fa-broadcast-tower\"></i></>}>\n                        <h1>Remote</h1>\n                        <Remote\n                            onPowerChange={onPowerChange}\n                            onModeChange={onModeChange}\n                            onFanSpeedChange={onSpeedChange}\n                            onTemperatureChange={onTemperatureChange}\n                            state={remoteState}\n                        />\n                    </Tabs.Tab>\n                    <Tabs.Tab label={<><i className=\"far fa-clock\" /></>}>\n                        <h1>Timers</h1>\n                        {\n                            timers.state === 'loaded'\n                                ? <Timers client={client} dispatch={dispatch} timers={timers.timers} />\n                                : \"Loading...\"\n                        }\n                    </Tabs.Tab>\n                </Tabs>\n\n            </main>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = reactLifecyclesCompat;","module.exports = ReactDOM;"],"sourceRoot":""}